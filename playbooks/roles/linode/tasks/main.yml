---

- name: "Generate a throw-away RSA key for SSH"
  command: "ssh-keygen -f {{ throwaway_ssh_key }} -b 2048 -t rsa -C \"streisand-integration-test\" -N \"\""

- name: "Copy the Streisand noninteractive linode vars file locally"
  copy:
    src: "{{ linode_vars }}"
    dest: "{{ local_linode_vars }}"

- name: "Configure the SSH key"
  lineinfile:
    path: "{{ local_linode_vars }}"
    line: "streisand_ssh_private_key: {{ throwaway_ssh_key }}"
    regexp: "^streisand_ssh_private_key: \"~/\\.ssh/id_rsa\"$"
    state: present

- name: "Enable test-client mode"
  lineinfile:
    path: "{{ local_linode_vars }}"
    line: "streisand_client_test: yes"
    insertafter: EOF
    state: present

- name: "Set the Linode API key"
  lineinfile:
    path: "{{ local_linode_vars }}"
    line: "linode_api_key: {{ lookup('env','LINODE_API_KEY') }}"
    regexp: "^linode_api_key: \"\"$"
    state: present

- name: "Set the Linode datacenter"
  lineinfile:
    path: "{{ local_linode_vars }}"
    line: "linode_datacenter: \"{{ linode_datacenter }}\""
    regexp: "^linode_datacenter: \"7\"$"
    state: present

- name: "Set the Linode server name"
  lineinfile:
    path: "{{ local_linode_vars }}"
    line: "linode_server_name: streisand-e2e-test"
    regexp: "^linode_server_name: streisand$"
    state: present

- name: "Get the {{ throwaway_ssh_key }}.pub contents"
  command: "cat {{ throwaway_ssh_key }}.pub"
  register: ssh_key
  changed_when: False

- name: "Create a client server"
  linode:
    api_key: "{{ lookup('env','LINODE_API_KEY') }}"
    name: "streisand-e2e-client"
    plan: "1"
    datacenter: "6"
    distribution: "146"
    kernel_id: "210"
    ssh_pub_key: "{{ ssh_key.stdout }}"
    alert_cpu_threshold: "1000"
    alert_diskio_threshold: "10"
    alert_bwin_threshold : "10"
    alert_bwout_threshold: "10"
    alert_bwquota_threshold: "80"
    wait: yes
  register: streisand_client

- name: "Wait until the server has finished booting and OpenSSH is accepting connections"
  wait_for:
    host: "{{ streisand_client.instance.ipv4 }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600

- name: Rewrite the client instance IP
  lineinfile:
    path: "inventory"
    line: "{{ streisand_client.instance.ipv4 }} ansible_connection=local ansible_python_interpreter=python2$"
    regexp: "^CLIENT_INSTANCE_IP ansible_connection=local ansible_python_interpreter=python2$"
    state: present
